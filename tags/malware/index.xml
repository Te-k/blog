<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Malware on </title>
    <link>https://maynier.eu/tags/malware/</link>
    <description>Recent content in Malware on </description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Â© {year}</copyright>
    <lastBuildDate>Sun, 20 Dec 2020 00:00:00 -0500</lastBuildDate>
    <atom:link href="https://maynier.eu/tags/malware/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Analyzing Cobalt Strike for Fun and Profit</title>
      <link>https://maynier.eu/blog/2020/12/20/analyzing-cobalt-strike-for-fun-and-profit/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 -0500</pubDate>
      <guid>https://maynier.eu/blog/2020/12/20/analyzing-cobalt-strike-for-fun-and-profit/</guid>
      <description>&lt;p&gt;I am not sure what happened this year but it seems that Cobalt Strike is now the most used malware around the world, from &lt;a href=&#34;https://www.fireeye.com/blog/threat-research/2020/03/apt41-initiates-global-intrusion-campaign-using-multiple-exploits.html&#34;&gt;APT41&lt;/a&gt; to &lt;a href=&#34;https://www.cybereason.com/blog/operation-cobalt-kitty-apt&#34;&gt;APT32&lt;/a&gt;, even the last &lt;a href=&#34;https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html&#34;&gt;SolarWinds supply chain attack&lt;/a&gt; involved Cobalt Strike. Without relaunching the heated debate on publishing offensive tools, this blog post intends to summarize what an analyst needs to know about Cobalt Strike to quickly identify and analyze it during incidents.&lt;/p&gt;&#xA;&lt;figure&gt;&#xA;    &lt;img src=&#34;https://maynier.eu/media/cobaltstrike/everywhere.jpg&#34; style=&#34;max-width:400px&#34;/&gt;&#xA;   &#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h2 id=&#34;finding-cobalt-strike-servers&#34;&gt;Finding Cobalt Strike Servers&lt;/h2&gt;&#xA;&lt;p&gt;A few months ago, the Salesforce security team &lt;a href=&#34;https://engineering.salesforce.com/easily-identify-malicious-servers-on-the-internet-with-jarm-e095edac525a&#34;&gt;published&lt;/a&gt; a new active fingerprint tool called &lt;a href=&#34;https://github.com/salesforce/jarm&#34;&gt;JARM&lt;/a&gt;. It is the active equivalent to &lt;a href=&#34;https://github.com/salesforce/ja3&#34;&gt;JA3&lt;/a&gt; they published last year. It generates a fingerprint based on the TLS configuration of a remote server, such as the TLS version or the TLS extensions, without considering the certificate. It is especially useful to identify custom web servers used by some tools, and Cobalt Strike is one of them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Analyzing Shellcodes with Miasm for Fun and Profit</title>
      <link>https://maynier.eu/blog/2020/04/04/analyzing-shellcodes-with-miasm-for-fun-and-profit/</link>
      <pubDate>Sat, 04 Apr 2020 00:00:00 +0200</pubDate>
      <guid>https://maynier.eu/blog/2020/04/04/analyzing-shellcodes-with-miasm-for-fun-and-profit/</guid>
      <description>&lt;p&gt;Shellcodes are an interesting piece of software because they have to run with unusual constraints. They are also small enough to be used to learn new tools. I have been wanting to learn to use &lt;a href=&#34;https://github.com/cea-sec/miasm&#34;&gt;miasm&lt;/a&gt; for a long time (since I saw the first presentation at SSTIC some years ago), I finally used a few nights of confinement to learn that, here is a short summary.&lt;/p&gt;&#xA;&lt;h2 id=&#34;linux-shellcode&#34;&gt;Linux shellcode&lt;/h2&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s start with a Linux shellcode as they are less complex than Windows shellcodes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Targeted Attacks Against Civil Society : What is New in 2019?</title>
      <link>https://maynier.eu/blog/2019/12/02/targeted-attacks-against-civil-society-what-is-new-in-2019/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:02 -0500</pubDate>
      <guid>https://maynier.eu/blog/2019/12/02/targeted-attacks-against-civil-society-what-is-new-in-2019/</guid>
      <description>&lt;h3 id=&#34;tldr&#34;&gt;TL;DR&lt;/h3&gt;&#xA;&lt;p&gt;New trends in targeted attacks against civil society in 2019 :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;More attacks against smartphones, some attacks are using 0-days and we don&amp;rsquo;t know how to be effectively protected against them, but many attacks are using exploits against fixed bugs in Android&lt;/li&gt;&#xA;&lt;li&gt;Phishing attacks bypassing 2 Factor Authentication solutions other than hardware keys are common now. We have to consider that most attacks will support that in the future, and move to hardware tokens for 2FA&lt;/li&gt;&#xA;&lt;li&gt;OAuth attacks are still there and will likely be there for some time. As they bypass many protections against phishing, people need to be aware of them and check their OAuth access regularly.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;targeted-attacks-against-civil-society--what-is-new-in-2019&#34;&gt;Targeted Attacks Against Civil Society : What is New in 2019?&lt;/h3&gt;&#xA;&lt;p&gt;10 years ago, the &lt;a href=&#34;http://www.nartv.org/mirror/ghostnet.pdf&#34;&gt;GhostNet report&lt;/a&gt; published by the Citizen Lab made quite a buzz; it described an important coordinated effort of compromising computers over the world, from the embassy of India in the US to PetroVietnam. It was one of the first times that an attack campaign of that scale was revealed, but what made it especially important is that this campaign was discovered when researchers identified attacks against the Tibetan community in exile, and more specifically against the Office of the Dalai Lama.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Another PE tool</title>
      <link>https://maynier.eu/blog/2018/02/04/another-pe-tool/</link>
      <pubDate>Sun, 04 Feb 2018 17:08:02 -0500</pubDate>
      <guid>https://maynier.eu/blog/2018/02/04/another-pe-tool/</guid>
      <description>&lt;p&gt;Analyzing PE files is a basic task in reverse engineering in order to understand their structure, look for anything interesting before going more in depth into the reverse engineering in itself. There are countless tools to do that, on Windows I use &lt;a href=&#34;https://www.winitor.com/&#34;&gt;PeStudio&lt;/a&gt;, &lt;a href=&#34;http://wjradburn.com/software/&#34;&gt;PEView&lt;/a&gt; and &lt;a href=&#34;http://www.angusj.com/resourcehacker/&#34;&gt;Resource Hacker&lt;/a&gt;. But most of the time I want to have a first view of the file before starting my Virtual Machine, so I was looking for a CLI tool on Linux. There is of course &lt;a href=&#34;https://github.com/Te-k/analyst-scripts/blob/master/pe/pescanner.py&#34;&gt;PEScanner&lt;/a&gt; published by Michael Ligh with the good &lt;a href=&#34;https://www.wiley.com/en-us/Malware&amp;#43;Analyst%27s&amp;#43;Cookbook&amp;#43;and&amp;#43;DVD%3A&amp;#43;Tools&amp;#43;and&amp;#43;Techniques&amp;#43;for&amp;#43;Fighting&amp;#43;Malicious&amp;#43;Code-p-9780470613030&#34;&gt;Malware Analyst&amp;rsquo;s Cookbook&lt;/a&gt; but it is a bit outdated (python2 only) and I like to write my own tools to be sure I understand how they work and what are their limits.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Machine learning for malware detection</title>
      <link>https://maynier.eu/blog/2016/07/16/machine-learning-for-malware-detection/</link>
      <pubDate>Sat, 16 Jul 2016 12:52:42 +0200</pubDate>
      <guid>https://maynier.eu/blog/2016/07/16/machine-learning-for-malware-detection/</guid>
      <description>&lt;p&gt;Plop,&lt;/p&gt;&#xA;&lt;p&gt;I have been reading many articles about Machine Learning recently, and it seems to be the new hype technology so I wanted to play a bit with these algorithms to better understand the principles behind it. If you don&amp;rsquo;t know machine learning, you should to read this &lt;a href=&#34;http://www.r2d3.us/visual-intro-to-machine-learning-part-1/&#34;&gt;awesome article&lt;/a&gt; or &lt;a href=&#34;https://redshiftzero.github.io/2015/08/29/Manipulation-and-Machine-Learning/&#34;&gt;this one&lt;/a&gt;. This article was largely inspired by &lt;a href=&#34;https://blog.socialcops.com/engineering/machine-learning-python&#34;&gt;this one which analyze the Titanic data&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;machine-learning-and-classification&#34;&gt;Machine Learning and Classification&lt;/h2&gt;&#xA;&lt;p&gt;So the idea of machine learning is to let the algorithm learn by itself the best parameters from data in order to make good predictions. There are many different applications, in our case we will consider using machine learning algorithm to classify binaries between legitimate and malicious binaries. This idea is &lt;a href=&#34;http://ieeexplore.ieee.org/xpl/login.jsp?tp=&amp;amp;arnumber=924286&amp;amp;url=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D924286&#34;&gt;not&lt;/a&gt; &lt;a href=&#34;http://ieeexplore.ieee.org/xpl/login.jsp?tp=&amp;amp;arnumber=1297538&amp;amp;url=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D1297538&#34;&gt;new&lt;/a&gt; and Adobe has even released a tool called &lt;a href=&#34;https://github.com/adobe-security/Malware-classifier&#34;&gt;Adobe Malware Classifier&lt;/a&gt; at &lt;a href=&#34;https://www.blackhat.com/html/webcast/webcast-2012-polymorphicmalware.html&#34;&gt;Black Hat 2012&lt;/a&gt; but it will be a nice exercice to see how to use machine learning.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comparison of php scanners</title>
      <link>https://maynier.eu/blog/2016/05/14/comparison-of-php-scanners/</link>
      <pubDate>Sat, 14 May 2016 17:44:19 +0200</pubDate>
      <guid>https://maynier.eu/blog/2016/05/14/comparison-of-php-scanners/</guid>
      <description>&lt;p&gt;Hi there!&lt;/p&gt;&#xA;&lt;p&gt;I have recently looked different compromised websites on github, mostly using outdated Wordpress/Joomla/Drupal versions. In these cases, I often have to go through many different files to find the malicious one, whether added on the website or added to legitimate files. Here is a short summary of the different tools to detect them.&lt;/p&gt;&#xA;&lt;h2 id=&#34;clamav&#34;&gt;ClamAV&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.clamav.net/&#34;&gt;ClamAV&lt;/a&gt; is an open-source antivirus developed for different platform, but also one of the seldom antivirus used on Linux. It has a complex signature format with many open signature provided by the community (more than 3 700 000 according to wikipedia). And the good news, is that &lt;a href=&#34;http://blog.clamav.net/2015/06/clamav-099b-meets-yara.html&#34;&gt;it supports Yara&lt;/a&gt; since last year!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
